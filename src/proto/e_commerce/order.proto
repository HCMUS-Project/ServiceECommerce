syntax = "proto3";

import "auth/user_token.proto";

package order;

enum OrderType {
    WEEK = 0;
    YEAR = 1;
}

service OrderService {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {}
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}
    rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {}
    rpc ListOrdersForTenant(ListOrdersForTenantRequest) returns (ListOrdersResponse) {}
    rpc UpdateStageOrder(UpdateStageOrderRequest) returns (UpdateStageOrderResponse) {}
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {}
    rpc GetAllOrderValue(GetAllOrderValueRequest) returns (GetAllOrderValueResponse) {}
    rpc GetOrdersReportOfListUsers(GetOrdersReportOfListUsersRequest) returns (GetOrdersReportOfListUsersResponse) {}
}

message CreateOrderRequest{
    userToken.User user = 1; 
    string domain = 2;
    repeated string products_id = 3;
    repeated int32 quantities = 4;
    string phone = 5;
    string address = 6;
    optional string voucher_id = 7;
    string payment_method = 8;
    string payment_callback_url = 9;
}

message CreateOrderResponse{
    string order_id = 1;
    string payment_url = 2;
}

message GetOrderRequest{
    string order_id = 1;
    userToken.User user = 2;
}

message OrderProduct{
    string product_id = 1;
    int32 quantity = 2;
}

message GetOrderResponse{
    string order_id = 1;
    string phone = 3;
    string address = 4;
    string voucher_id = 5;
    string stage = 6;
    string order_time = 7;
    int32 total_price = 8;
    repeated OrderProduct products = 9;
    string user = 10;
}

message ListOrdersRequest{
    userToken.User user = 1;
    optional string stage = 2;
}

message ListOrdersForTenantRequest{
    userToken.User user = 1;
    optional string stage = 2;
}

message ListOrdersResponse{
    repeated GetOrderResponse orders = 1;
}

message UpdateStageOrderRequest{
    string order_id = 1;
    userToken.User user = 2;
    string stage = 3;
}

message UpdateStageOrderResponse{
    string order_id = 1;
    string stage = 2;
}

message CancelOrderRequest {
    userToken.User user = 1;
    string id = 2;
}

message CancelOrderResponse {
    string result = 1;
}

message OrderReport {
    string type = 1;
    int32 total_order = 2;
    int32 total_value = 3;
}

message GetAllOrderValueRequest {
    userToken.User user = 1;
    OrderType type = 2;
}

message GetAllOrderValueResponse {
    int32 value = 1;
    int32 total = 2;
    repeated OrderReport report = 3;
}

message GetOrdersReportOfListUsersRequest{
    userToken.User user = 1;
    repeated string emails = 2;
}

message OrderReportOfUser{
    string email = 1;
    int32 total_order = 2;
}

message GetOrdersReportOfListUsersResponse{
    repeated OrderReportOfUser report_orders = 1;
}